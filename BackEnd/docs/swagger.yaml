definitions:
  models.LoginReq:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
info:
  contact: {}
  description: This is a sample server for a demo application
  title: Demo API
  version: "1.0"
paths:
  /Auth/login:
    post:
      consumes:
      - application/json
      description: Authenticate user and return JWT token
      parameters:
      - description: User Login Details
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.LoginReq'
      produces:
      - application/json
      responses:
        "200":
          description: Success
        "404":
          description: User not found
        "500":
          description: Internal Server Error
      summary: User Login
      tags:
      - Auth
  /Auth/sign-up:
    post:
      consumes:
      - application/json
      description: Register a new user
      parameters:
      - description: Name
        in: formData
        name: name
        required: true
        type: string
      - description: Email
        in: formData
        name: email
        required: true
        type: string
      - description: Password
        in: formData
        name: password
        required: true
        type: string
      - description: Image
        in: formData
        name: image
        required: true
        type: file
      - description: Gender (male/female)
        in: formData
        name: gender
        required: true
        type: string
      - description: Phone Number
        in: formData
        name: phoneNo
        required: true
        type: string
      - description: Date of Birth (YYYY-MM-DD)
        in: formData
        name: dob
        required: true
        type: string
      - description: Is Mentor (true/false)
        in: formData
        name: isMentor
        required: true
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: Success
        "400":
          description: Image upload failed
        "500":
          description: Internal Server Error
      summary: Sign up a new user
      tags:
      - Auth
  /Course/add-Course:
    post:
      consumes:
      - application/json
      description: Add Course for the user
      parameters:
      - description: Category
        in: formData
        name: category
        required: true
        type: string
      - description: Title
        in: formData
        name: title
        required: true
        type: string
      - description: Description
        in: formData
        name: description
        required: true
        type: string
      - description: Image
        in: formData
        name: image
        required: true
        type: file
      - description: Price
        in: formData
        name: price
        required: true
        type: number
      produces:
      - application/json
      responses:
        "200":
          description: Success
        "400":
          description: Invalid input data
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Add Course
      tags:
      - Course
  /Course/get-course-details/{id}:
    get:
      consumes:
      - application/json
      description: Get course by ID
      parameters:
      - description: Course ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
        "401":
          description: Unauthorized
        "404":
          description: Course not found
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Get Course By ID
      tags:
      - Course
  /Course/get-courses:
    get:
      consumes:
      - application/json
      description: Get all available courses
      produces:
      - application/json
      responses:
        "200":
          description: Success
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Get All Courses
      tags:
      - Course
  /bookmarks/add-bookMark/{id}:
    post:
      consumes:
      - application/json
      description: Adds a bookmark for a specified course by the authenticated user
      parameters:
      - description: Course ID
        example: '"123e4567-e89b-12d3-a456-426614174000"'
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
        "401":
          description: Unauthorized
        "404":
          description: Course not found
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Add a bookmark
      tags:
      - Bookmarks
  /bookmarks/get-bookMarks:
    get:
      consumes:
      - application/json
      description: Retrieves all bookmarks for the authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: Success
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Get user's bookmarks
      tags:
      - Bookmarks
  /bookmarks/remove-bookMark/{id}:
    delete:
      consumes:
      - application/json
      description: Removes a bookmark for a specified course by the authenticated
        user
      parameters:
      - description: Course ID
        example: '"123e4567-e89b-12d3-a456-426614174000"'
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
        "401":
          description: Unauthorized
        "404":
          description: Course not found
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Remove a bookmark
      tags:
      - Bookmarks
  /mentor/get-mentors:
    get:
      consumes:
      - application/json
      description: Get all users who are mentors
      produces:
      - application/json
      responses:
        "200":
          description: Success
        "400":
          description: Invalid input data
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Get all mentors
      tags:
      - Mentors
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
